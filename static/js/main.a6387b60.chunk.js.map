{"version":3,"sources":["components/back.button.js","components/logo.js","components/header.component.js","components/select.component.js","App.js","serviceWorker.js","index.js","assets/back.svg","assets/logo.svg"],"names":["backButton","_ref","classes","theme","backAction","react_default","a","createElement","className","style","color","onClick","react_svg","src","back","svgStyle","fill","wrapper","btnLabel","defaultProps","withStyles","position","top","left","fontSize","&:hover","cursor","display","@media (max-width: 768px)","logoSvg","logo","svgClassName","width","height","HeaderComponent","headerRoot","back_button","components_logo","minHeight","justifyContent","alignItems","SelectComponent","props","callback","themeName","root","autoComplete","FormControl_default","formControl","Select_default","value","onChange","event","target","MenuItem_default","flexWrap","margin","spacing","unit","minWidth","selectEmpty","marginTop","whiteTheme","name","backgroundColor","card","boxShadow","tealTheme","themeProvider","border","rootTeal","mainBody","_useState","useState","_useState2","Object","slicedToArray","appTheme","setAppThem","concat","header_component","select_component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a6387b60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactSVG from \"react-svg\";\r\nimport back from \"../assets/back.svg\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  backButton: {\r\n    position: \"absolute\",\r\n    top: 10,\r\n    left: 32,\r\n    fontSize: 19,\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  },\r\n  btnLabel: {\r\n    display: \"inline\"\r\n  },\r\n  \"@media (max-width: 768px)\": {\r\n    btnLabel: {\r\n      display: \"none\"\r\n    }\r\n  }\r\n};\r\n\r\nconst backButton = ({ classes, theme, backAction }) => {\r\n  return (\r\n    <div\r\n      className={classes.backButton}\r\n      style={{ color: theme.color }}\r\n      onClick={backAction}\r\n    >\r\n      <ReactSVG src={back} svgStyle={{ fill: theme.color }} wrapper=\"span\" />\r\n      <span className={classes.btnLabel}>Back</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nbackButton.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  backAction: PropTypes.func.isRequired\r\n};\r\n\r\nbackButton.defaultProps = {\r\n  theme: { color: \"#757575\" }\r\n};\r\n\r\nexport default withStyles(styles)(backButton);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactSVG from \"react-svg\";\r\nimport logo from \"../assets/logo.svg\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  logo: {\r\n    width: 130,\r\n    height: 33\r\n  }\r\n};\r\n\r\nconst logoSvg = ({ classes, theme }) => {\r\n  return (\r\n    <div className={\"logo-component\"}>\r\n      <ReactSVG\r\n        src={logo}\r\n        svgClassName={classes.logo}\r\n        svgStyle={theme}\r\n        wrapper=\"span\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nlogoSvg.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired\r\n};\r\n\r\nlogoSvg.defaultProps = {\r\n  theme: { fill: \"#1fc4f9\" }\r\n};\r\n\r\nexport default withStyles(styles)(logoSvg);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport BackButton from \"./back.button\";\r\nimport Logo from \"./logo\";\r\n\r\nconst styles = {\r\n  headerRoot: {\r\n    minHeight: \"80px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n    fontSize: \"calc(10px + 2vmin)\"\r\n  },\r\n  \"@media (max-width: 768px)\": {\r\n    logo: { display: \"none\" },\r\n    headerRoot: {\r\n      minHeight: 35\r\n    }\r\n  }\r\n};\r\n\r\nconst HeaderComponent = ({ classes, theme, backAction }) => {\r\n  return (\r\n    <div className={classes.headerRoot}>\r\n      <BackButton backAction={() => backAction()} theme={theme.backButton} />\r\n      <span className={classes.logo}>\r\n        <Logo theme={theme.logo} />\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n  backAction: PropTypes.func.isRequired\r\n};\r\n\r\nHeaderComponent.defaultProps = {\r\n  theme: {\r\n    backButton: { color: \"#757575\" },\r\n    logo: { fill: \"#1fc4f9\" }\r\n  }\r\n};\r\n\r\nexport default withStyles(styles)(HeaderComponent);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 150\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nconst SelectComponent = props => {\r\n  const { callback, classes, themeName } = props;\r\n  const handleChange = event => {\r\n    callback(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\">\r\n      <FormControl className={classes.formControl}>\r\n        <Select value={themeName} onChange={handleChange}>\r\n          <MenuItem value={\"white\"}>White</MenuItem>\r\n          <MenuItem value={\"teal\"}>Teal</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nSelectComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  callback: PropTypes.func.isRequired,\r\n  themeName: PropTypes.string.isRequired\r\n};\r\n\r\nSelectComponent.defaultProps = {\r\n  themeName: \"view\"\r\n};\r\n\r\nexport default withStyles(styles)(SelectComponent);\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport HeaderComponent from \"./components/header.component\";\nimport SelectComponent from \"./components/select.component\";\n\nconst whiteTheme = {\n  name: \"white\",\n  backButton: { color: \"#757575\" },\n  logo: { fill: \"#1fc4f9\" },\n  root: { backgroundColor: \"#0000\" },\n  card: { boxShadow: \"0 2px 16px 0 rgba(198,198,198,0.5)\" }\n};\n\nconst tealTheme = {\n  name: \"teal\",\n  backButton: { color: \"#ffff\" },\n  logo: { fill: \"#ffff\" },\n  root: { backgroundColor: \"#29e2ff\" },\n  card: { boxShadow: \"none\" }\n};\n\nconst styles = {\n  root: {\n    height: \"calc(100vh - 10px)\",\n    border: \"5px solid #dfe0e0\"\n  },\n  rootTeal: {\n    backgroundColor: \"#29e2ff\"\n  },\n  mainBody: {\n    height: \"calc(100vh - 94px)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  card: {\n    width: 350,\n    height: \"62vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  \"@media (max-width: 768px)\": {\n    mainBody: {\n      alignItems: \"flex-start\"\n    },\n    card: {\n      boxShadow: \"none!important\",\n      alignItems: \"flex-start\"\n    }\n  }\n};\n\nconst themeProvider = themeName => {\n  switch (themeName) {\n    case \"white\":\n      return whiteTheme;\n    case \"teal\":\n      return tealTheme;\n    default:\n      return whiteTheme;\n  }\n};\n\nconst App = ({ classes }) => {\n  const [appTheme, setAppThem] = useState(themeProvider(\"white\"));\n\n  const toggleTheme = () => {\n    appTheme.name === \"white\"\n      ? setAppThem(themeProvider(\"teal\"))\n      : setAppThem(themeProvider(\"white\"));\n  };\n\n  return (\n    <div\n      className={classes.root}\n      style={{ backgroundColor: `${appTheme.root.backgroundColor}` }}\n    >\n      <HeaderComponent theme={appTheme} backAction={() => toggleTheme()} />\n\n      <div className={classes.mainBody}>\n        <div\n          className={classes.card}\n          style={{ boxShadow: `${appTheme.card.boxShadow}` }}\n        >\n          <SelectComponent\n            callback={themeName => setAppThem(themeProvider(themeName))}\n            themeName={appTheme.name}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/back.284d1e59.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.124f53d2.svg\";"],"sourceRoot":""}